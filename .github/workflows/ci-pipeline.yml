name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry Path
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run Black Linter
        run: poetry run black --check .

      - name: Run isort
        run: poetry run isort --check-only .

      - name: Run pylint
        run: poetry run pylint smart_enterprise_ai_copilot

      - name: Run Pytest with Coverage
        run: poetry run pytest --cov=smart_enterprise_ai_copilot tests/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  docker-build:
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t smart-enterprise-ai-copilot:latest .

      - name: Log in to Docker Hub
        if: ${{ env.DOCKER_USERNAME && env.DOCKER_PASSWORD }}
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Push Docker Image
        if: ${{ env.DOCKER_USERNAME && env.DOCKER_PASSWORD }}
        run: |
          docker tag smart-enterprise-ai-copilot:latest ${{ env.DOCKER_USERNAME }}/smart-enterprise-ai-copilot:latest
          docker push ${{ env.DOCKER_USERNAME }}/smart-enterprise-ai-copilot:latest
